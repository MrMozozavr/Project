from pyparsing import str_type
import time
import telebot
from telebot import types
from pycoingecko import CoinGeckoAPI
from py_currency_converter import convert
from config import TOKEN
cg = CoinGeckoAPI()

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def main(message):
    b1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    b1.add(types.KeyboardButton('–ö—É—Ä—Å –∫—Ä–∏–ø—Ç—ã'), types.KeyboardButton('–ö—É—Ä—Å —Ñ–∏–∞—Ç–∞'), types.KeyboardButton('–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä'), types.KeyboardButton('–í–∞—à–∞ –∫—Ä–∏–ø—Ç–∞'), types.KeyboardButton('‚ùì–ò–ù–§–û'))
    cr = bot.send_message(message.chat.id, '–ú—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π\n–ï—Å–ª–∏ –±–æ—Ç –ø–µ—Ä–µ—Å—Ç–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n/start', reply_markup=b1)
    bot.register_next_step_handler(cr, step)
    if message.text == '/start':
        return main

def step(message):
    if message.text == '–ö—É—Ä—Å –∫—Ä–∏–ø—Ç—ã':
        step2(message)
    elif message.text == '–ö—É—Ä—Å —Ñ–∏–∞—Ç–∞':
        fiat(message)
    elif message.text == '–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä':
        convert1(message)
    elif message.text == '–í–∞—à–∞ –∫—Ä–∏–ø—Ç–∞':
        yourcrypto(message)
    elif message.text == '‚ùì–ò–ù–§–û':
        donate(message)
    else:
        bot.send_message(message.chat.id,'–ù–µ –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã ü§®')
        time.sleep(1)
        main(message)

def donate(message):
    bot.send_message(message.chat.id, '–ù–∞ —á–∞–π —Å–æ–∑–¥–∞—Ç–µ–ª—é\n(MetaMask): <code>0x136Bb3261BB55a780678e71578BC40dB35E2bb69</code>\n–û—Ñ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –±–æ—Ç–∞ t.me/lazybees\nversion bot 1.3', parse_mode="html")
    main(message)

def yourcrypto(message):
    startKBoard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    id = types.KeyboardButton(text="–ö—É—Ä—Å –ø–æ id")
    id2 = types.KeyboardButton(text="–£–∑–Ω–∞—Ç—å id –∫—Ä–∏–ø—Ç—ã")
    back = types.KeyboardButton(text="–ù–∞–∑–∞–¥")
    startKBoard.add(id, id2, back)
    msg = bot.send_message(message.chat.id, '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –ø–æ "id"', reply_markup=startKBoard)
    bot.register_next_step_handler(msg, yourcrypto1)

def yourcrypto1(message):
    if message.text == '–£–∑–Ω–∞—Ç—å id –∫—Ä–∏–ø—Ç—ã':
        yourcrypto3(message)
    elif message.text == '–ö—É—Ä—Å –ø–æ id':
        yourcrypto2(message)
    elif message.text == '–ù–∞–∑–∞–¥':
        main(message)

def yourcrypto2(message):
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ id –∂–µ–ª–∞–µ–º–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:')
    bot.register_next_step_handler(msg, yourcrypto2_1)

def yourcrypto2_1(message):
    msg = message.text
    try:
        price = cg.get_price(ids=msg, vs_currencies='usd')
        bot.send_message(message.chat.id, f'–¶–µ–Ω–∞ {msg} == {price[msg]["usd"]} $')
    except KeyError:
        msg = 'bitcoin'
        bot.send_message(message.chat.id,'–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π id')
        time.sleep(2)
    yourcrypto(message)

def yourcrypto3(message):
    bot.send_document(message.chat.id, 'BQACAgIAAxkBAAIE6GJzvcmgGWvGgT0CzM2QJVZOr4MkAAJ5HAACr9OhS344eYi36-j8JAQ')
    time.sleep(0.2)
    main(message)

def convert1(message):
    b1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    b1.add(types.KeyboardButton('Bitcoin'),   types.KeyboardButton('Ethereum'),
        types.KeyboardButton('Binance Coin'), types.KeyboardButton('litecoin'),
        types.KeyboardButton('Polygon'),      types.KeyboardButton('XRP'),
        types.KeyboardButton('Solana'),       types.KeyboardButton('Cardano'),
        types.KeyboardButton('Polkadot'),     types.KeyboardButton('Avalanche'),
        types.KeyboardButton('Terra'),        types.KeyboardButton('Cosmos Hub'),
        types.KeyboardButton('Dogecoin'),     types.KeyboardButton('Dai'),
        types.KeyboardButton('Dash'),         types.KeyboardButton('Cronos'),
        types.KeyboardButton('Chainlink'),    types.KeyboardButton('FTX Token'),
        types.KeyboardButton('TRON'),         types.KeyboardButton('The Sandbox'),
        types.KeyboardButton('Uniswap'),      types.KeyboardButton('–ù–∞–∑–∞–¥'))
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É:', reply_markup=b1)
    bot.register_next_step_handler(msg, convert2)

def convert2(message):
    if message.text == 'Bitcoin':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y1)
    elif message.text == 'Ethereum':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y2)
    elif message.text == 'Binance Coin':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y3)
    elif message.text == 'litecoin':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y4)
    elif message.text == 'Polygon':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y5)
    elif message.text == 'XRP':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y6)
    elif message.text == 'Solana':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y7)
    elif message.text == 'Cardano':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y8)
    elif message.text == 'Polkadot':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y9)
    elif message.text == 'Avalanche':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y10)
    elif message.text == 'Terra':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y11)
    elif message.text == 'Cosmos Hub':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y12)
    elif message.text == 'Dogecoin':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y13)
    elif message.text == 'Dai':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y14)
    elif message.text == 'Dash':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y15)
    elif message.text == 'Cronos':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y16)
    elif message.text == 'Chainlink':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y17)
    elif message.text == 'FTX Token':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y18)
    elif message.text == 'TRON':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y19)
    elif message.text == 'The Sandbox':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y20)
    elif message.text == 'Uniswap':
        msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?')
        bot.register_next_step_handler(msg, y21)
    elif message.text == '–ù–∞–∑–∞–¥':
        main(message)
    else:
        bot.send_message(message.chat.id,'–ù–µ –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã ü§®')
        time.sleep(0.5)
        main(message)

def fiat(message):
    b1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    b1.add(types.KeyboardButton('USD'), types.KeyboardButton('UAH'), types.KeyboardButton('–ì–ª–∞–≤–Ω–∞—è'))
    q = bot.send_message(message.chat.id, '–ö—É—Ä—Å —Ñ–∏–∞—Ç–∞', reply_markup=b1)
    bot.register_next_step_handler(q, fiat_step2)

def fiat_step2(message):
    b1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    b1.add(types.KeyboardButton('–ù–∞–∑–∞–¥'))
    if message.text == 'USD':
        price = convert(base='USD', amount=1, to=['RUB', 'EUR', 'UAH', 'KZT'])
        bot.send_message(message.chat.id, f'1 USD == {price["RUB"]} RUB\n'
                                          f'1 USD == {price["EUR"]} EUR\n'
                         f'1 USD == {price["UAH"]} UAH\n'
                         f'1 USD == {price["KZT"]} KZT')
        go_main = bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥?', reply_markup=b1)
        bot.register_next_step_handler(go_main, fiat)
    if message.text == 'UAH':
        price = convert(base='UAH', amount=1, to=['USD', 'EUR', 'RUB', 'KZT'])
        bot.send_message(message.chat.id, f'1 UAH == {price["USD"]} USD\n'
                                              f'1 UAH == {price["EUR"]} EUR\n'
                                              f'1 UAH == {price["RUB"]} RUB\n'
                                              f'1 UAH == {price["KZT"]} KZT')
        go_main = bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥?', reply_markup=b1)
        bot.register_next_step_handler(go_main, fiat)
    if message.text == '–ì–ª–∞–≤–Ω–∞—è':
        main(message)

def y1(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='bitcoin', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üåêBitcoin == {price["bitcoin"]["usd"] * convert2} $')
    main(message)

def y2(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='ethereum', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üîπEthereum == {price["ethereum"]["usd"] * convert2} $')
    main(message)

def y3(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='Binancecoin', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} „ÄΩÔ∏èBinance Coin == {price["Binancecoin"]["usd"] * convert2} $')
    main(message)

def y4(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='litecoin', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üî∏Litecoin  == {price["litecoin"]["usd"] * convert2} $')
    main(message)

def y5(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='matic-network', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üîπPolygon == {price["matic-network"]["usd"] * convert2} $')
    main(message)

def y6(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='ripple', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üîπXRP == {price["ripple"]["usd"] * convert2} $')
    main(message)

def y7(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='solana', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üîπSolana == {price["solana"]["usd"] * convert2} $')
    main(message)

def y8(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='cardano', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üîπCardano == {price["cardano"]["usd"] * convert2} $')
    main(message)

def y9(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='polkadot', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} ‚Ä¢ Polkadot == {price["polkadot"]["usd"] * convert2} $')
    main(message)

def y10(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='avalanche-2', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} ‚Ä¢ Avalanche == {price["avalanche-2"]["usd"] * convert2} $')
    main(message)

def y11(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='terra-luna', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üîπTerra == {price["terra-luna"]["usd"] * convert2} $')
    main(message)

def y12(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='cosmos', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} ‚Ä¢ Cosmos Hub == {price["cosmos"]["usd"] * convert2} $')
    main(message)

def y13(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='dogecoin', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} Dogecoin == {price["dogecoin"]["usd"] * convert2} $')
    main(message)

def y14(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='dai', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üîπDai == {price["dai"]["usd"] * convert2} $')
    main(message)

def y15(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='dash', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üîπDash == {price["Dash"]["usd"] * convert2} $')
    main(message)

def y16(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='crypto-com-chain', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} ‚Ä¢ Cronos == {price["crypto-com-chain"]["usd"] * convert2} $')
    main(message)

def y17(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='chainlink', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} ‚Ä¢ Chainlink == {price["chainlink"]["usd"] * convert2} $')
    main(message)

def y18(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='ftx-token', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} „ÄΩÔ∏èFTX Token == {price["ftx-token"]["usd"] * convert2} $')
    main(message)

def y19(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='tron', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} ‚Ä¢ TRON == {price["tron"]["usd"] * convert2} $')
    main(message)

def y20(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='the-sandbox', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} üî∏The Sandbox == {price["the-sandbox"]["usd"] * convert2} $')
    main(message)

def y21(message):
    convert2 = message.text
    convert2 = float(convert2)

    price = cg.get_price(ids='uniswap', vs_currencies='usd')
    bot.send_message(message.chat.id, f'{convert2} ü¶ÑUniswap == {price["uniswap"]["usd"] * convert2} $')
    main(message)

def step2(message):
    b1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    b1.add(types.KeyboardButton('–ö—É—Ä—Å –∫ USD'), types.KeyboardButton('–ö—É—Ä—Å –∫ UAH'), types.KeyboardButton('–ì–ª–∞–≤–Ω–∞—è'))
    q = bot.send_message(message.chat.id, '–ö—É—Ä—Å –º–æ–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤', reply_markup=b1)
    bot.register_next_step_handler(q, step3)

def step3(message):
    b1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    b1.add(types.KeyboardButton('–ù–∞–∑–∞–¥'))
    if message.text == '–ö—É—Ä—Å –∫ USD':
        price = cg.get_price(ids='bitcoin, ethereum, litecoin, matic-network, uniswap, dogecoin, terra-luna, ripple, solana, cardano, polkadot, avalanche-2, dai, the-sandbox, dash, crypto-com-chain, cosmos, ftx-token, tron, chainlink, binancecoin', vs_currencies='usd')
        bot.send_message(message.chat.id, f'–ú–æ–∏ —Ç–æ–∫–µ–Ω—ã:\n\n'
                                          f'üåêBitcoin == {price["bitcoin"]["usd"]} $\n'
                                          f'üîπEthereum == {price["ethereum"]["usd"]} $\n\n'
                                          f'„ÄΩÔ∏èBinance Coin == {price["binancecoin"]["usd"]} $\n'
                                          f'üî∏Litecoin == {price["litecoin"]["usd"]} $\n'
                                          f'üîπPolygon == {price["matic-network"]["usd"]} $\n'
                                          f'üîπXRP == {price["ripple"]["usd"]} $\n'
                                          f'üîπSolana == {price["solana"]["usd"]} $\n'
                                          f'üîπCardano == {price["cardano"]["usd"]} $\n'
                                          f'‚Ä¢ Polkadot == {price["polkadot"]["usd"]} $\n'
                                          f'‚Ä¢ Avalanche == {price["avalanche-2"]["usd"]} $\n'
                                          f'üîπTerra == {price["terra-luna"]["usd"]} $\n\n'
                                          f'‚Ä¢ Cosmos Hub == {price["cosmos"]["usd"]} $\n'
                                          f'ü¶ÆDogecoin == {price["dogecoin"]["usd"]} $\n'
                                          f'üîπDai == {price["dai"]["usd"]} $\n'
                                          f'üîπDash == {price["dash"]["usd"]} $\n'
                                          f'‚Ä¢ Cronos == {price["crypto-com-chain"]["usd"]} $\n'
                                          f'‚Ä¢ Chainlink == {price["chainlink"]["usd"]} $\n'
                                          f'„ÄΩÔ∏èFTX Token == {price["ftx-token"]["usd"]} $\n'
                                          f'‚Ä¢ TRON == {price["tron"]["usd"]} $\n\n'
                                          f'üî∏The Sandbox == {price["the-sandbox"]["usd"]} $\n'
                                          f'ü¶ÑUniswap == {price["uniswap"]["usd"]} $', reply_markup=b1)
        go_main = bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥?', reply_markup=b1)
        bot.register_next_step_handler(go_main, step2)

    elif message.text == '–ö—É—Ä—Å –∫ UAH':
        price = cg.get_price(ids='bitcoin, ethereum, litecoin, matic-network, uniswap, dogecoin, terra-luna, ripple, solana, cardano, polkadot, avalanche-2, dai, the-sandbox, dash, crypto-com-chain, cosmos, ftx-token, tron, chainlink, binancecoin', vs_currencies='uah')
        bot.send_message(message.chat.id, f'–ú–æ–∏ —Ç–æ–∫–µ–Ω—ã:\n\n'
                                              f'üåêBitcoin == {price["bitcoin"]["uah"]} ‚Ç¥\n'
                                              f'üîπEthereum == {price["ethereum"]["uah"]} ‚Ç¥\n\n'
                                              f'„ÄΩÔ∏èBinance Coin == {price["binancecoin"]["uah"]} ‚Ç¥\n'
                                              f'üî∏Litecoin == {price["litecoin"]["uah"]} ‚Ç¥\n'
                                              f'üîπPolygon == {price["matic-network"]["uah"]} ‚Ç¥\n'
                                              f'üîπXRP == {price["ripple"]["uah"]} ‚Ç¥\n'
                                              f'üîπSolana == {price["solana"]["uah"]} ‚Ç¥\n'
                                              f'üîπCardano == {price["cardano"]["uah"]} ‚Ç¥\n'
                                              f'‚Ä¢ Polkadot == {price["polkadot"]["uah"]} ‚Ç¥\n'
                                              f'‚Ä¢ Avalanche == {price["avalanche-2"]["uah"]} ‚Ç¥\n'
                                              f'üîπTerra == {price["terra-luna"]["uah"]} ‚Ç¥\n\n'
                                              f'‚Ä¢ Cosmos Hub == {price["cosmos"]["uah"]} ‚Ç¥\n'
                                              f'Dogecoin == {price["dogecoin"]["uah"]} ‚Ç¥\n'
                                              f'üîπDai == {price["dai"]["uah"]} ‚Ç¥\n'
                                              f'üîπDash == {price["dash"]["uah"]} ‚Ç¥\n'
                                              f'‚Ä¢ Cronos == {price["crypto-com-chain"]["uah"]} ‚Ç¥\n'
                                              f'‚Ä¢ Chainlink == {price["chainlink"]["uah"]} ‚Ç¥\n'
                                              f'„ÄΩÔ∏èFTX Token == {price["ftx-token"]["uah"]} ‚Ç¥\n'
                                              f'‚Ä¢ TRON == {price["tron"]["uah"]} ‚Ç¥\n\n'
                                              f'üî∏The Sandbox == {price["the-sandbox"]["uah"]} ‚Ç¥\n'
                                              f'ü¶ÑUniswap == {price["uniswap"]["uah"]} ‚Ç¥', reply_markup=b1)
        go_main = bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥?', reply_markup=b1)
        bot.register_next_step_handler(go_main, step2)
    elif message.text == '–ì–ª–∞–≤–Ω–∞—è':
        main(message)
    else:
        bot.send_message(message.chat.id,'–ù–µ –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã ü§®')
        time.sleep(0.5)
        main(message)

if __name__ == '__main__':
    bot.polling(none_stop=True)